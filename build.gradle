plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = 'com.gsp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.6.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    testImplementation 'org.mockito:mockito-inline:4.2.0'
    
    implementation 'com.google.firebase:firebase-admin:8.1.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "GroupBy-Side-Project-GSP_bridge-server"
        property "sonar.organization", "groupby-side-project-gsp"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/config/**')
        }))
    }
}

jar {
    enabled = false
}